From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: ruViolence <78062896+ruViolence@users.noreply.github.com>
Date: Sun, 5 Jun 2022 05:48:17 +0500
Subject: [PATCH] perf: reduce inventory updates

Reduces the network load and prevents potential lag exploits.

diff --git a/src/main/java/com/github/ruviolence/reaper/InventoryUpdateHelper.java b/src/main/java/com/github/ruviolence/reaper/InventoryUpdateHelper.java
new file mode 100644
index 0000000000000000000000000000000000000000..0fea42d69c7762b8cd22523d667e7866d6902a6c
--- /dev/null
+++ b/src/main/java/com/github/ruviolence/reaper/InventoryUpdateHelper.java
@@ -0,0 +1,158 @@
+package com.github.ruviolence.reaper;
+
+import net.minecraft.server.Block;
+import net.minecraft.server.BlockLongGrass;
+import net.minecraft.server.Blocks;
+import net.minecraft.server.EntityPlayer;
+import net.minecraft.server.EnumHand;
+import net.minecraft.server.EnumItemSlot;
+import net.minecraft.server.Item;
+import net.minecraft.server.ItemArmor;
+import net.minecraft.server.ItemArrow;
+import net.minecraft.server.ItemStack;
+import net.minecraft.server.ItemSword;
+import net.minecraft.server.ItemTool;
+import net.minecraft.server.Items;
+import net.minecraft.server.NonNullList;
+import net.minecraft.server.PacketPlayOutSetSlot;
+
+public class InventoryUpdateHelper {
+    public static void onLeftClick(EntityPlayer player, EnumHand hand, ItemStack itemInHand) {
+        if (itemInHand.isEmpty()) return;
+        if (shouldBeIgnored(itemInHand)) return;
+
+        Item item = itemInHand.getItem();
+
+        // Update if the item may be damaged on the clientside
+        if (item instanceof ItemSword || item instanceof ItemTool) {
+            player.playerConnection.sendPacket(new PacketPlayOutSetSlot(player.defaultContainer.windowId, getHeldItemPacketSlot(player, hand), itemInHand));
+        }
+    }
+
+    public static void onRightClick(EntityPlayer player, EnumHand hand, ItemStack itemInHand) {
+        if (shouldBeIgnored(itemInHand)) return;
+        // Update held item
+        player.playerConnection.sendPacket(new PacketPlayOutSetSlot(player.defaultContainer.windowId, getHeldItemPacketSlot(player, hand), itemInHand));
+
+        Item item = itemInHand.getItem();
+
+        // Update armor slot on equip
+        if (item instanceof ItemArmor) {
+            EnumItemSlot armorSlotType = ((ItemArmor) item).c;
+            // If the armor slot is empty
+            if (player.getEquipment(armorSlotType).isEmpty()) {
+                player.playerConnection.sendPacket(new PacketPlayOutSetSlot(player.defaultContainer.windowId, getArmorPacketSlot(armorSlotType), player.getEquipment(armorSlotType)));
+            }
+        }
+
+        if (item == Items.BOW) {
+            updateArrow(player);
+        }
+    }
+
+    public static void onBlockBreak(EntityPlayer player, ItemStack itemInMainHand) {
+        if (!(itemInMainHand.getItem() instanceof ItemSword)) return;
+        // Update held item
+        player.playerConnection.sendPacket(new PacketPlayOutSetSlot(player.defaultContainer.windowId, getHeldItemPacketSlot(player, EnumHand.MAIN_HAND), itemInMainHand));
+    }
+
+    public static void onPotInteract(EntityPlayer player) {
+        NonNullList<ItemStack> items = player.defaultContainer.a();
+        for (int i = 0; i < items.size(); i++) {
+            ItemStack itemstack = items.get(i);
+
+            if (itemstack.isEmpty() || canBePotted(itemstack)) {
+                player.playerConnection.sendPacket(new PacketPlayOutSetSlot(player.defaultContainer.windowId, i, itemstack));
+            }
+        }
+    }
+
+    public static void onBowShoot(EntityPlayer player) {
+        bow_update:
+        {
+            ItemStack itemInMainHand = player.b(EnumHand.MAIN_HAND);
+            if (itemInMainHand.getItem() == Items.BOW) {
+                player.playerConnection.sendPacket(new PacketPlayOutSetSlot(player.defaultContainer.windowId, getHeldItemPacketSlot(player, EnumHand.MAIN_HAND), itemInMainHand));
+                break bow_update;
+            }
+
+            ItemStack itemInOffHand = player.b(EnumHand.OFF_HAND);
+            if (itemInOffHand.getItem() == Items.BOW) {
+                player.playerConnection.sendPacket(new PacketPlayOutSetSlot(player.defaultContainer.windowId, getHeldItemPacketSlot(player, EnumHand.OFF_HAND), itemInOffHand));
+            }
+        }
+
+        updateArrow(player);
+    }
+
+    public static void updateHeld(EntityPlayer player) {
+        player.playerConnection.sendPacket(new PacketPlayOutSetSlot(player.defaultContainer.windowId, getHeldItemPacketSlot(player, EnumHand.MAIN_HAND), player.b(EnumHand.MAIN_HAND)));
+        player.playerConnection.sendPacket(new PacketPlayOutSetSlot(player.defaultContainer.windowId, getHeldItemPacketSlot(player, EnumHand.OFF_HAND), player.b(EnumHand.OFF_HAND)));
+    }
+
+    public static void updateHeld(EntityPlayer player, EnumHand hand) {
+        player.playerConnection.sendPacket(new PacketPlayOutSetSlot(player.defaultContainer.windowId, getHeldItemPacketSlot(player, hand), player.b(hand)));
+    }
+
+    private static int getHeldItemPacketSlot(EntityPlayer player, EnumHand hand) {
+        return (hand == EnumHand.MAIN_HAND) ? (player.inventory.itemInHandIndex + 36) : 45;
+    }
+
+    private static int getArmorPacketSlot(EnumItemSlot slot) {
+        switch (slot) {
+            case HEAD: return 5;
+            case CHEST: return 6;
+            case LEGS: return 7;
+            case FEET: return 8;
+            default: throw new IllegalStateException("Unexpected value: " + slot);
+        }
+    }
+
+    private static void updateArrow(EntityPlayer player) {
+        ItemStack offHand = player.b(EnumHand.OFF_HAND);
+        if (offHand.getItem() instanceof ItemArrow) {
+            player.playerConnection.sendPacket(new PacketPlayOutSetSlot(player.defaultContainer.windowId, getHeldItemPacketSlot(player, EnumHand.OFF_HAND), offHand));
+            return;
+        }
+
+        ItemStack mainHand = player.b(EnumHand.MAIN_HAND);
+        if (mainHand.getItem() instanceof ItemArrow) {
+            player.playerConnection.sendPacket(new PacketPlayOutSetSlot(player.defaultContainer.windowId, getHeldItemPacketSlot(player, EnumHand.MAIN_HAND), mainHand));
+            return;
+        }
+
+        NonNullList<ItemStack> items = player.defaultContainer.a();
+        for (int i = 0; i < items.size(); ++i) {
+            ItemStack itemstack = items.get(i);
+
+            if (itemstack.getItem() instanceof ItemArrow) {
+                player.playerConnection.sendPacket(new PacketPlayOutSetSlot(player.defaultContainer.windowId, i, itemstack));
+                return;
+            }
+        }
+    }
+
+    private static boolean shouldBeIgnored(ItemStack stack) {
+        Item item = stack.getItem();
+        if (item == Items.WRITABLE_BOOK) return true;
+        if (item == Items.WRITTEN_BOOK) return true;
+        return false;
+    }
+
+    // Copied from BlockFlowerPot
+    private static boolean canBePotted(ItemStack stack) {
+        Block block = Block.asBlock(stack.getItem());
+        if (block != Blocks.YELLOW_FLOWER &&
+                block != Blocks.RED_FLOWER &&
+                block != Blocks.CACTUS &&
+                block != Blocks.BROWN_MUSHROOM &&
+                block != Blocks.RED_MUSHROOM &&
+                block != Blocks.SAPLING &&
+                block != Blocks.DEADBUSH) {
+            int data = stack.getData();
+            return block == Blocks.TALLGRASS && data == BlockLongGrass.EnumTallGrassType.FERN.a();
+        }
+
+        return true;
+    }
+}
diff --git a/src/main/java/com/github/ruviolence/reaper/ReaperConfig.java b/src/main/java/com/github/ruviolence/reaper/ReaperConfig.java
index d7483c343dae1bf8ec7045adf3a9d069eed4b1de..7314cb276916b3a1fd0072abe0ee7a853fa29d54 100644
--- a/src/main/java/com/github/ruviolence/reaper/ReaperConfig.java
+++ b/src/main/java/com/github/ruviolence/reaper/ReaperConfig.java
@@ -123,4 +123,9 @@ public class ReaperConfig {
         config.addDefault(path, def);
         return config.getString(path, config.getString(path));
     }
+
+    public static boolean reduceInventoryUpdates;
+    private static void reduceInventoryUpdates() {
+        reduceInventoryUpdates = getBoolean("reduce-inventory-updates", true);
+    }
 }
diff --git a/src/main/java/net/minecraft/server/BlockCauldron.java b/src/main/java/net/minecraft/server/BlockCauldron.java
index 366e886910e34db757394eef117e793fe0d67bba..5b82c9c28a9e89c59af68604337f3eb871bb2ce1 100644
--- a/src/main/java/net/minecraft/server/BlockCauldron.java
+++ b/src/main/java/net/minecraft/server/BlockCauldron.java
@@ -121,6 +121,7 @@ public class BlockCauldron extends Block {
                             } else if (!entityhuman.inventory.pickup(itemstack1)) {
                                 entityhuman.drop(itemstack1, false);
                             } else if (entityhuman instanceof EntityPlayer) {
+                                if (!com.github.ruviolence.reaper.ReaperConfig.reduceInventoryUpdates) // Reaper - Reduce inventory updates
                                 ((EntityPlayer) entityhuman).updateInventory(entityhuman.defaultContainer);
                             }
                         }
@@ -142,6 +143,7 @@ public class BlockCauldron extends Block {
                             entityhuman.b(StatisticList.J);
                             entityhuman.a(enumhand, itemstack1);
                             if (entityhuman instanceof EntityPlayer) {
+                                if (!com.github.ruviolence.reaper.ReaperConfig.reduceInventoryUpdates) // Reaper - Reduce inventory updates
                                 ((EntityPlayer) entityhuman).updateInventory(entityhuman.defaultContainer);
                             }
                         }
@@ -190,6 +192,7 @@ public class BlockCauldron extends Block {
                             } else if (!entityhuman.inventory.pickup(itemstack1)) {
                                 entityhuman.drop(itemstack1, false);
                             } else if (entityhuman instanceof EntityPlayer) {
+                                if (!com.github.ruviolence.reaper.ReaperConfig.reduceInventoryUpdates) // Reaper - Reduce inventory updates
                                 ((EntityPlayer) entityhuman).updateInventory(entityhuman.defaultContainer);
                             }
                         }
diff --git a/src/main/java/net/minecraft/server/EntityHuman.java b/src/main/java/net/minecraft/server/EntityHuman.java
index 16a9e06438cd6f499beba7bee37fcc870913783a..fdc80f6f09817c99143dec00b493ce7645f2a508 100644
--- a/src/main/java/net/minecraft/server/EntityHuman.java
+++ b/src/main/java/net/minecraft/server/EntityHuman.java
@@ -1162,6 +1162,11 @@ public abstract class EntityHuman extends EntityLiving {
                         }
                         // CraftBukkit start - resync on cancelled event
                         if (this instanceof EntityPlayer) {
+                            // Reaper start - Reduce inventory updates
+                            if (com.github.ruviolence.reaper.ReaperConfig.reduceInventoryUpdates) {
+                                com.github.ruviolence.reaper.InventoryUpdateHelper.onLeftClick((EntityPlayer) this, EnumHand.MAIN_HAND, this.b(EnumHand.MAIN_HAND));
+                            } else
+                            // Reaper end - Reduce inventory updates
                             ((EntityPlayer) this).getBukkitEntity().updateInventory();
                         }
                         // CraftBukkit end
diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java
index b9886c68045c783c7ced0874411f0363a32232eb..3b504c23702725240dfc1aa304e29d239c3ed1a2 100644
--- a/src/main/java/net/minecraft/server/EntityLiving.java
+++ b/src/main/java/net/minecraft/server/EntityLiving.java
@@ -2491,6 +2491,11 @@ public abstract class EntityLiving extends Entity {
 
                 if (event.isCancelled()) {
                     // Update client
+                    // Reaper start - Reduce inventory updates
+                    if (com.github.ruviolence.reaper.ReaperConfig.reduceInventoryUpdates) {
+                        com.github.ruviolence.reaper.InventoryUpdateHelper.updateHeld((EntityPlayer) this, this.cH());
+                    } else
+                    // Reaper end - Reduce inventory updates
                     ((EntityPlayer) this).getBukkitEntity().updateInventory();
                     ((EntityPlayer) this).getBukkitEntity().updateScaledHealth();
                     return;
@@ -2514,6 +2519,11 @@ public abstract class EntityLiving extends Entity {
 
             // Paper start - if the replacement is anything but the default, update the client inventory
             if (this instanceof EntityPlayer && !com.google.common.base.Objects.equal(defaultReplacement, itemstack)) {
+                // Reaper start - Reduce inventory updates
+                if (com.github.ruviolence.reaper.ReaperConfig.reduceInventoryUpdates) {
+                    com.github.ruviolence.reaper.InventoryUpdateHelper.updateHeld((EntityPlayer) this, this.cH());
+                } else
+                // Reaper end - Reduce inventory updates
                 ((EntityPlayer) this).getBukkitEntity().updateInventory();
             }
         }
diff --git a/src/main/java/net/minecraft/server/ItemBow.java b/src/main/java/net/minecraft/server/ItemBow.java
index 9cac4e6dd16d515ff81e6609134326d29d4ab574..3aaf861c1eca67de4460266b1bce83928de1b6db 100644
--- a/src/main/java/net/minecraft/server/ItemBow.java
+++ b/src/main/java/net/minecraft/server/ItemBow.java
@@ -110,6 +110,11 @@ public class ItemBow extends Item {
                         if (event.getProjectile() == entityarrow.getBukkitEntity()) {
                             if (!world.addEntity(entityarrow)) {
                                 if (entityhuman instanceof EntityPlayer) {
+                                    // Reaper start - Reduce inventory updates
+                                    if (com.github.ruviolence.reaper.ReaperConfig.reduceInventoryUpdates) {
+                                        com.github.ruviolence.reaper.InventoryUpdateHelper.onBowShoot((EntityPlayer) entityhuman);
+                                    } else
+                                    // Reaper end - Reduce inventory updates
                                     ((EntityPlayer) entityhuman).getBukkitEntity().updateInventory();
                                 }
                                 return;
diff --git a/src/main/java/net/minecraft/server/ItemEnderPearl.java b/src/main/java/net/minecraft/server/ItemEnderPearl.java
index 65e53127b97a7476eaf3c778b488a0fcd226c83e..298e0945bb8088fb4958a19703d2f08ba7e4568a 100644
--- a/src/main/java/net/minecraft/server/ItemEnderPearl.java
+++ b/src/main/java/net/minecraft/server/ItemEnderPearl.java
@@ -17,6 +17,11 @@ public class ItemEnderPearl extends Item {
             entityenderpearl.a(entityhuman, entityhuman.pitch, entityhuman.yaw, 0.0F, 1.5F, 1.0F);
             if (!world.addEntity(entityenderpearl)) {
                 if (entityhuman instanceof EntityPlayer) {
+                    // Reaper start - Reduce inventory updates
+                    if (com.github.ruviolence.reaper.ReaperConfig.reduceInventoryUpdates) {
+                        com.github.ruviolence.reaper.InventoryUpdateHelper.updateHeld((EntityPlayer) entityhuman, enumhand);
+                    } else
+                    // Reaper end - Reduce inventory updates
                     ((EntityPlayer) entityhuman).getBukkitEntity().updateInventory();
                 }
                 return new InteractionResultWrapper(EnumInteractionResult.FAIL, itemstack);
diff --git a/src/main/java/net/minecraft/server/ItemSnowball.java b/src/main/java/net/minecraft/server/ItemSnowball.java
index 6bb1106d9dc6ce8fac045f38a0f19041b6652d6b..4d938dd7406f25ad3ae212362f9bed213c6af7a7 100644
--- a/src/main/java/net/minecraft/server/ItemSnowball.java
+++ b/src/main/java/net/minecraft/server/ItemSnowball.java
@@ -29,6 +29,11 @@ public class ItemSnowball extends Item {
 
                 world.a((EntityHuman) null, entityhuman.locX, entityhuman.locY, entityhuman.locZ, SoundEffects.hp, SoundCategory.NEUTRAL, 0.5F, 0.4F / (ItemSnowball.j.nextFloat() * 0.4F + 0.8F));
             } else if (entityhuman instanceof EntityPlayer) {
+                // Reaper start - Reduce inventory updates
+                if (com.github.ruviolence.reaper.ReaperConfig.reduceInventoryUpdates) {
+                    com.github.ruviolence.reaper.InventoryUpdateHelper.updateHeld((EntityPlayer) entityhuman, enumhand);
+                } else
+                // Reaper end - Reduce inventory updates
                 ((EntityPlayer) entityhuman).getBukkitEntity().updateInventory();
             }
         }
diff --git a/src/main/java/net/minecraft/server/ItemStack.java b/src/main/java/net/minecraft/server/ItemStack.java
index 012c9dd54db32b573109f5567851cd96b91699a0..68486a0d814f472d02ad39c2db3c12309f596e14 100644
--- a/src/main/java/net/minecraft/server/ItemStack.java
+++ b/src/main/java/net/minecraft/server/ItemStack.java
@@ -243,6 +243,11 @@ public final class ItemStack {
             if (placeEvent != null && (placeEvent.isCancelled() || !placeEvent.canBuild())) {
                 enuminteractionresult = EnumInteractionResult.FAIL; // cancel placement
                 // PAIL: Remove this when MC-99075 fixed
+                // Reaper start - Reduce inventory updates
+                if (com.github.ruviolence.reaper.ReaperConfig.reduceInventoryUpdates) {
+                    com.github.ruviolence.reaper.InventoryUpdateHelper.updateHeld((EntityPlayer) entityhuman, enumhand);
+                } else
+                // Reaper end - Reduce inventory updates
                 placeEvent.getPlayer().updateInventory();
 
                 // Paper start
@@ -435,6 +440,11 @@ public final class ItemStack {
                     org.bukkit.event.player.PlayerItemDamageEvent event = new org.bukkit.event.player.PlayerItemDamageEvent(entityplayer.getBukkitEntity(), item, i);
                     org.bukkit.Bukkit.getServer().getPluginManager().callEvent(event);
                     if (i != event.getDamage() || event.isCancelled()) {
+                        // Reaper start - Reduce inventory updates
+                        if (com.github.ruviolence.reaper.ReaperConfig.reduceInventoryUpdates) {
+                            com.github.ruviolence.reaper.InventoryUpdateHelper.updateHeld(entityplayer);
+                        } else
+                        // Reaper end - Reduce inventory updates
                         event.getPlayer().updateInventory();
                     }
                     if (event.isCancelled()) return false;
diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index 8dedbe4c4e6198cd9659023022eab4d5335ef560..25f549122432147027868a1632dbb668c31bb1ee 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -1062,6 +1062,11 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
             }
 
             if (cancelled) {
+                // Reaper start - Reduce inventory updates
+                if (com.github.ruviolence.reaper.ReaperConfig.reduceInventoryUpdates) {
+                    com.github.ruviolence.reaper.InventoryUpdateHelper.onRightClick(this.player, enumhand, itemstack);
+                } else
+                // Reaper end - Reduce inventory updates
                 this.player.getBukkitEntity().updateInventory(); // SPIGOT-2524
             } else {
                 this.player.playerInteractManager.a(this.player, worldserver, itemstack, enumhand);
@@ -1695,6 +1700,11 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
                     }
 
                     if (event.isCancelled()) {
+                        // Reaper start - Reduce inventory updates
+                        if (com.github.ruviolence.reaper.ReaperConfig.reduceInventoryUpdates) {
+                            com.github.ruviolence.reaper.InventoryUpdateHelper.onRightClick(this.player, packetplayinuseentity.b(), itemInHand);
+                        } else
+                        // Reaper end - Reduce inventory updates
                         this.player.updateInventory(this.player.activeContainer); // Paper - Refresh player inventory
                         return;
                     }
@@ -1708,6 +1718,11 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
                     this.player.a(entity, enumhand);
                     // CraftBukkit start
                     if (!itemInHand.isEmpty() && itemInHand.getCount() <= -1) {
+                        // Reaper start - Reduce inventory updates
+                        if (com.github.ruviolence.reaper.ReaperConfig.reduceInventoryUpdates) {
+                            com.github.ruviolence.reaper.InventoryUpdateHelper.onRightClick(this.player, enumhand, itemInHand);
+                        } else
+                        // Reaper end - Reduce inventory updates
                         this.player.updateInventory(this.player.activeContainer);
                     }
                     // CraftBukkit end
@@ -1717,6 +1732,11 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
                     entity.a(this.player, packetplayinuseentity.c(), enumhand);
                     // CraftBukkit start
                     if (!itemInHand.isEmpty() && itemInHand.getCount() <= -1) {
+                        // Reaper start - Reduce inventory updates
+                        if (com.github.ruviolence.reaper.ReaperConfig.reduceInventoryUpdates) {
+                            com.github.ruviolence.reaper.InventoryUpdateHelper.onRightClick(this.player, enumhand, itemInHand);
+                        } else
+                        // Reaper end - Reduce inventory updates
                         this.player.updateInventory(this.player.activeContainer);
                     }
                     // CraftBukkit end
@@ -1732,6 +1752,11 @@ public class PlayerConnection implements PacketListenerPlayIn, ITickable {
 
                     // CraftBukkit start
                     if (!itemInHand.isEmpty() && itemInHand.getCount() <= -1) {
+                        // Reaper start - Reduce inventory updates
+                        if (com.github.ruviolence.reaper.ReaperConfig.reduceInventoryUpdates) {
+                            com.github.ruviolence.reaper.InventoryUpdateHelper.onRightClick(this.player, packetplayinuseentity.b(), itemInHand);
+                        } else
+                        // Reaper end - Reduce inventory updates
                         this.player.updateInventory(this.player.activeContainer);
                     }
                     // CraftBukkit end
diff --git a/src/main/java/net/minecraft/server/PlayerInteractManager.java b/src/main/java/net/minecraft/server/PlayerInteractManager.java
index 5458e442916d4912c4c6eec6223c07d2f2eb95f2..c9082c26d04e73e43eeafd1c5a6f48fe846e8805 100644
--- a/src/main/java/net/minecraft/server/PlayerInteractManager.java
+++ b/src/main/java/net/minecraft/server/PlayerInteractManager.java
@@ -452,6 +452,11 @@ public class PlayerInteractManager {
                 }
 
                 if (!entityhuman.isHandRaised()) {
+                    // Reaper start - Reduce inventory updates
+                    if (com.github.ruviolence.reaper.ReaperConfig.reduceInventoryUpdates) {
+                        com.github.ruviolence.reaper.InventoryUpdateHelper.onRightClick((EntityPlayer) entityhuman, enumhand, itemstack1);
+                    } else
+                    // Reaper end - Reduce inventory updates
                     ((EntityPlayer) entityhuman).updateInventory(entityhuman.defaultContainer);
                 }
 
@@ -512,9 +517,21 @@ public class PlayerInteractManager {
                     TileEntity tileentity = this.world.getTileEntity(blockposition);
                     if (tileentity != null) {
                         player.playerConnection.sendPacket(tileentity.getUpdatePacket());
+                        // Reaper start - Reduce inventory updates
+                        if (com.github.ruviolence.reaper.ReaperConfig.reduceInventoryUpdates) {
+                            if (!((TileEntityFlowerPot) tileentity).getContents().isEmpty()) {
+                                com.github.ruviolence.reaper.InventoryUpdateHelper.onPotInteract(player);
+                            }
+                        }
+                        // Reaper end - Reduce inventory updates
                     }
                 // Paper end - extend Player Interact cancellation
                 }
+                // Reaper start - Reduce inventory updates
+                if (com.github.ruviolence.reaper.ReaperConfig.reduceInventoryUpdates) {
+                    com.github.ruviolence.reaper.InventoryUpdateHelper.updateHeld((EntityPlayer) entityhuman, enumhand);
+                } else
+                // Reaper end - Reduce inventory updates
                 ((EntityPlayer) entityhuman).getBukkitEntity().updateInventory(); // SPIGOT-2867
                 enuminteractionresult = (event.useItemInHand() != Event.Result.ALLOW) ? EnumInteractionResult.SUCCESS : EnumInteractionResult.PASS;
             } else if (this.gamemode == EnumGamemode.SPECTATOR) {

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: ruViolence <78062896+ruViolence@users.noreply.github.com>
Date: Wed, 8 Jun 2022 11:19:08 +0500
Subject: [PATCH] perf: optimize BlockPosition


diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 2eca9cfb278ebcf04a47d47075bdfdb8ea30b5f8..f743f26aa3c2981d30c7611936f8d4d31e9b1f4b 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -931,7 +931,7 @@ public abstract class World implements IBlockAccess {
                 int l = MathHelper.floor(vec3d.x);
                 int i1 = MathHelper.floor(vec3d.y);
                 int j1 = MathHelper.floor(vec3d.z);
-                BlockPosition blockposition = new BlockPosition(l, i1, j1);
+                BlockPosition.MutableBlockPosition blockposition = new BlockPosition.MutableBlockPosition(l, i1, j1); // Reaper - Optimize BlockPosition
                 IBlockData iblockdata = this.getTypeIfLoaded(blockposition); // Paper
                 if (iblockdata == null) return null; // Paper
                 Block block = iblockdata.getBlock();
@@ -1034,7 +1034,7 @@ public abstract class World implements IBlockAccess {
                     l = MathHelper.floor(vec3d.x) - (enumdirection == EnumDirection.EAST ? 1 : 0);
                     i1 = MathHelper.floor(vec3d.y) - (enumdirection == EnumDirection.UP ? 1 : 0);
                     j1 = MathHelper.floor(vec3d.z) - (enumdirection == EnumDirection.SOUTH ? 1 : 0);
-                    blockposition = new BlockPosition(l, i1, j1);
+                    blockposition.c(l, i1, j1); // Reaper - Optimize BlockPosition
                     IBlockData iblockdata1 = this.getTypeIfLoaded(blockposition); // Paper
                     if (iblockdata1 == null) return null; // Paper
                     Block block1 = iblockdata1.getBlock();
@@ -2504,6 +2504,10 @@ public abstract class World implements IBlockAccess {
             int i3;
             int j3;
             int k3;
+            // Reaper start - Optimize BlockPosition
+            BlockPosition.MutableBlockPosition blockposition1 = new BlockPosition.MutableBlockPosition();
+            BlockPosition.MutableBlockPosition blockposition2 = blockposition1;
+            // Reaper end
 
             if (l > k) {
                 this.J[j++] = 133152;
@@ -2516,7 +2520,7 @@ public abstract class World implements IBlockAccess {
                     j2 = (l1 >> 6 & 63) - 32 + j1;
                     k2 = (l1 >> 12 & 63) - 32 + k1;
                     int l3 = l1 >> 18 & 15;
-                    BlockPosition blockposition1 = new BlockPosition(i2, j2, k2);
+                    blockposition1.c(i2, j2, k2); // Reaper - Optimize BlockPosition
 
                     l2 = this.getBrightness(enumskyblock, blockposition1);
                     if (l2 == l3) {
@@ -2562,7 +2566,7 @@ public abstract class World implements IBlockAccess {
                 i2 = (l1 & 63) - 32 + i1;
                 j2 = (l1 >> 6 & 63) - 32 + j1;
                 k2 = (l1 >> 12 & 63) - 32 + k1;
-                BlockPosition blockposition2 = new BlockPosition(i2, j2, k2);
+                blockposition2.c(i2, j2, k2); // Reaper - Optimize BlockPosition
                 int k5 = this.getBrightness(enumskyblock, blockposition2);
 
                 l2 = this.a(blockposition2, enumskyblock);
